import { expansions, geometries, hulls, measurements, transforms, extrusions, booleans, colors } from '@jscad/modeling';
import type { 
  Centroid, 
  Geom2, 
  Vec2, 
  Vec3, 
  Mat4, 
  RGB, 
  RGBA, 
  BoundingBox, 
  CenterOptions, 
  ExpandOptions,
  ExtrudeLinearOptions, 
  ExtrudeRotateOptions, 
  MirrorOptions,
  OffsetOptions
} from './types';

const { geom2 } = geometries;

import { FluentGeom2Array } from './FluentGeom2Array';
import { FluentGeom3 } from './FluentGeom3';

export class FluentGeom2 implements Geom2 {
  readonly type: 'geom2' = 'geom2';
  sides!: Array<any>;
  transforms!: Mat4;

  constructor(geometry: Geom2) {
    Object.assign(this, geometry ?? geom2.create());
  }
  
  clone(): FluentGeom2 {
    return new FluentGeom2(geom2.clone(this));
  }

  append(geometry: Geom2): FluentGeom2Array {
    return FluentGeom2Array.create(this, geometry);
  }

  {{#transformMethods}}
  {{> methodObject}}
  {{/transformMethods}}
  
  {{#expansionMethods}}
  {{> methodObject}}
  {{/expansionMethods}}

  {{#offsetMethods}}
  {{> methodObject}}
  {{/offsetMethods}}

  {{#booleanMethods}}
  {{> methodBoolean}}
  {{/booleanMethods}}
  
  {{#hullMethods}}
  {{> methodObject}}
  {{/hullMethods}}

  {{#extrudeMethods}}
  {{> methodExtrude}}
  {{/extrudeMethods}}
  
  {{#measurementMethods}}
  {{> methodValue}}
  {{/measurementMethods}}

  {{#geom2Methods}}
  {{> methodValue}}
  {{/geom2Methods}}

}

import { expansions, geometries, hulls, measurements, transforms, booleans, colors } from '@jscad/modeling';
import type { 
  Centroid, 
  ExpandOptions,
  Geom3, 
  Vec3, 
  Mat4, 
  RGB, 
  RGBA, 
  BoundingBox, 
  CenterOptions, 
  MirrorOptions,
} from '../types';
import { FluentGeom3Array } from './FluentGeom3Array';

const { geom3 } = geometries;

export class FluentGeom3 implements Geom3 {
  readonly type: 'geom3' = 'geom3';
  polygons!: Array<any>;
  transforms!: Mat4;

  constructor(geometry: Geom3) {
    Object.assign(this, geometry ?? geom3.create());
  }

  clone(): FluentGeom3 {
    return new FluentGeom3(geom3.clone(this));
  }

  append(geometry: Geom3): FluentGeom3Array {
    return FluentGeom3Array.create(this, geometry);
  }

  {{#transformMethods}}
  {{> methodObject}}
  {{/transformMethods}}
  
  {{#hullMethods}}
  {{> methodObject}}
  {{/hullMethods}}

  {{#expansionMethods}}
  {{> methodObject}}
  {{/expansionMethods}}

  {{#booleanMethods}}
  {{> methodBoolean}}
  {{/booleanMethods}}
  
  {{#measurementMethods}}
  {{> methodValue}}
  {{/measurementMethods}}

  {{#geom3Methods}}
  {{> methodValue}}
  {{/geom3Methods}}

}
